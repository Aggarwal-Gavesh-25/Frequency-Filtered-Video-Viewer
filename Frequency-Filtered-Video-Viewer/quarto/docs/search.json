[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/1) First/index.html",
    "href": "posts/1) First/index.html",
    "title": "1.) Library Imports",
    "section": "",
    "text": "The necessary libraries are imported. cv2 is OpenCV, for computer vision tasks. numpy is imported as np, which is used for numerical operations. signal module from scipy is imported as sig, which is used for signal processing.\nCODE :-"
  },
  {
    "objectID": "posts/3) Third/index.html",
    "href": "posts/3) Third/index.html",
    "title": "3.) FPS Retrieval",
    "section": "",
    "text": "A video file is opened for reading using cv2.VideoCapture(), and the frames per second (fps) of the video are obtained using cap.get(cv2.CAP_PROP_FPS).\nCODE :-"
  },
  {
    "objectID": "posts/4) Fourth/index.html",
    "href": "posts/4) Fourth/index.html",
    "title": "4.) Video Frame Filtering Process",
    "section": "",
    "text": "1-3 :- This while loop iterates over each frame of the video. cap.read() reads the next frame from the video, and ret is a boolean value indicating whether the frame was successfully read.\n4-8 :- Here, an array filtered_frame is created to store the filtered image. The loop iterates over each color channel (assuming BGR), flattens the channel to 1D, filters the frequency components using the filter_frequency function, reshapes the filtered channel back to the original shape, and assigns it to filtered_frame.\n9-10 :- The filtered image is normalized to the 0-255 range and converted to the uint8 data type, which is expected by cv2.imshow().\n11-12 :- Both the original and filtered frames are displayed using cv2.imshow().\n13-14 :- This line waits for a key press for 25 milliseconds. If the pressed key is ‘q’, the loop breaks, and the program ends.\n15-16 :- If ret is False, indicating that there are no more frames to read, the loop breaks, and the program ends.\nCODE :-"
  },
  {
    "objectID": "posts/5) Fifth/index.html",
    "href": "posts/5) Fifth/index.html",
    "title": "5.) Window Closure",
    "section": "",
    "text": "Finally, cap.release() releases the video capture object, and cv2.destroyAllWindows() closes all OpenCV windows.\nCODE :-"
  },
  {
    "objectID": "posts/2) Second/index.html",
    "href": "posts/2) Second/index.html",
    "title": "2.) Function for Filtering Frequency",
    "section": "",
    "text": "This function, filter_frequency, takes in a signal, a frequency range, and the frames per second (fps) of the video. It calculates the Nyquist frequency (half of the sampling rate), determines the cutoff frequency within the specified frequency range, designs a Butterworth low-pass filter with a 4th order, and filters the signal using scipy’s filtfilt function, which applies a digital filter forward and backward to eliminate phase shifts.\nCODE :-"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Frequency-Filtered-Video-Viewer",
    "section": "",
    "text": "4.) Video Frame Filtering Process\n\n\n\n\n\n\ncode\n\n\n\n\n\n\n\n\n\nFeb 20, 2024\n\n\nGavesh Aggarwal\n\n\n\n\n\n\n\n\n\n\n\n\n5.) Window Closure\n\n\n\n\n\n\ncode\n\n\n\n\n\n\n\n\n\nFeb 20, 2024\n\n\nGavesh Aggarwal\n\n\n\n\n\n\n\n\n\n\n\n\n3.) FPS Retrieval\n\n\n\n\n\n\ncode\n\n\n\n\n\n\n\n\n\nFeb 20, 2024\n\n\nGavesh Aggarwal\n\n\n\n\n\n\n\n\n\n\n\n\n2.) Function for Filtering Frequency\n\n\n\n\n\n\ncode\n\n\n\n\n\n\n\n\n\nFeb 20, 2024\n\n\nGavesh Aggarwal\n\n\n\n\n\n\n\n\n\n\n\n\n1.) Library Imports\n\n\n\n\n\n\ncode\n\n\n\n\n\n\n\n\n\nFeb 20, 2024\n\n\nGavesh Aggarwal\n\n\n\n\n\n\nNo matching items"
  }
]